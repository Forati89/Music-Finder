{"version":3,"sources":["components/Artist.js","components/Tracks.js","components/Search.js","components/App.js","index.js"],"names":["Artist","artist","images","name","followers","genres","Container","Col","sm","total","join","Row","md","size","offset","src","url","alt","style","width","height","borderRadius","objectFit","margin","marginBottom","boxShadow","Tracks","state","playing","audio","playingPreviewUrl","playAudio","previewUrl","Audio","pause","setState","play","trackIcon","track","preview_url","tracks","this","props","map","id","album","key","onClick","className","Component","Search","artistQuery","handleKeyPress","event","searchArtist","updateArtistQuery","console","log","target","value","type","onChange","placeholder","onKeyPress","Button","color","backgroundColor","border","API_ADRESS","App","fetch","then","response","json","artists","items","catch","error","alert","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0004388e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Container, Col, Row } from 'reactstrap';\r\n\r\nconst Artist = ({ artist }) => {\r\n    if (!artist) return null;\r\n    const {images, name, followers, genres } = artist;\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Col sm={12}>\r\n                    <h3>{name}</h3>\r\n                    <p>{followers.total} followers</p>\r\n                    <p>{genres.join(', ')}</p>\r\n                    <Row>\r\n                    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    <img\r\n                    src={images[0] && images[0].url}\r\n                    alt='Artist'\r\n                    style={{\r\n                        width: 200,\r\n                        height: 200,\r\n                        borderRadius: 100,\r\n                        objectFit: 'cover',\r\n                        margin: 10,\r\n                        marginBottom: 50,\r\n                        boxShadow: \"5px 10px 18px #888888\"\r\n                    }}>    \r\n                    </img>\r\n                    </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artist;","import React, {Component} from 'react';\r\n\r\n\r\nclass Tracks extends Component {\r\n    state = {playing : false, audio: null, playingPreviewUrl: null};\r\n\r\n    playAudio = previewUrl => () => {\r\n        const audio = new Audio(previewUrl);\r\n        if(!this.state.playing){\r\n        audio.play();\r\n        this.setState({playing: true, audio, playingPreviewUrl: previewUrl});\r\n    } else{\r\n        this.state.audio.pause();\r\n        if(this.state.playingPreviewUrl === previewUrl){\r\n            this.setState({playing: false});\r\n        }\r\n        else{\r\n            audio.play();\r\n            this.setState({audio, playingPreviewUrl: previewUrl})\r\n        }\r\n      }\r\n    }\r\n\r\n    trackIcon = track => {\r\n        if(!track.preview_url){\r\n            return<span>N/A</span>;\r\n        }\r\n        if(\r\n            this.state.playing &&\r\n            this.state.playingPreviewUrl === track.preview_url\r\n        ){\r\n            return <span>| |</span>;\r\n        }\r\n        return <span>&#9654;</span>;\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {tracks} = this.props;\r\n\r\n    return(\r\n        <div>\r\n                {\r\n                    tracks.map(track =>{\r\n                       const { id, name, album, preview_url } = track;\r\n                        return(\r\n                            <div\r\n                             key={id}\r\n                             onClick={this.playAudio(preview_url)}\r\n                             className='track'\r\n                            >\r\n                                <img \r\n                                src={album.images[0] && album.images[0].url}\r\n                                alt='track-img'\r\n                                className='track-image'\r\n                                style={{\r\n                                    objectFit: 'cover'\r\n                                }}\r\n                                 />\r\n                                <p className='track-text'>{name}</p>\r\n                                <p className='track-icon'>{this.trackIcon(track)}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Tracks;","import React, { Component } from \"react\";\r\nimport { Button, Input, Col, FormGroup, Container } from 'reactstrap';\r\nimport { relative } from \"path\";\r\n\r\nclass Search extends Component {\r\n    state = {artistQuery: ''}\r\n\r\n  handleKeyPress = event => {\r\n    if (event.key === \"Enter\") this.searchArtist();\r\n  };\r\n\r\n  updateArtistQuery = event => {\r\n    console.log(\"event.target.value\", event.target.value);\r\n    this.setState({ artistQuery: event.target.value });\r\n  };\r\n\r\n  searchArtist = () => {\r\n      this.props.searchArtist(this.state.artistQuery);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchBar\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.updateArtistQuery}\r\n                name=\"email\"\r\n                id=\"searchArtist\"\r\n                placeholder=\"Search for an Artist\"\r\n                onKeyPress={this.handleKeyPress}\r\n                className=\"searchInput\"\r\n              />\r\n            <Button\r\n             onClick={this.searchArtist}\r\n             color=\"primary\"\r\n              style={{backgroundColor: 'black', border: '0px'}}>\r\n              Search\r\n            </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport Artist from './Artist';\r\nimport Tracks from './Tracks';\r\nimport Search from './Search';\r\n\r\nconst API_ADRESS = 'https://spotify-api-wrapper.appspot.com';\r\n\r\nclass App extends Component {\r\n    state = {artist: null, tracks: []};\r\n\r\n    componentDidMount(){\r\n        this.searchArtist('bruno');\r\n    }\r\n\r\n    searchArtist = artistQuery => {\r\n        fetch(`${API_ADRESS}/artist/${artistQuery}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            console.log('json', json);\r\n            if(json.artists.total > 0) {\r\n                const artist = json.artists.items[0];\r\n                console.log('artist', artist);\r\n                this.setState({artist});\r\n                fetch(`${API_ADRESS}/artist/${artist.id}/top-tracks`)\r\n                .then(response => response.json())\r\n                .then(json => this.setState({tracks: json.tracks}))\r\n                .catch(error => alert(error.message));\r\n            }\r\n        })\r\n        .catch(error => alert(error.message));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n        <h2>Music Finder</h2>\r\n        <Search searchArtist={this.searchArtist}/>\r\n        <Artist artist={this.state.artist} />\r\n        <Tracks tracks={this.state.tracks}/>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}